//Proyecto - Base de datos Hotel
#include <iostream>
#include<string>
#include <fstream>
using namespace std;

class Persona {
public:
	std::string nombre;
	int DNI;
	int telefono;
	Persona() {
	}
	Persona(std::string _nombre, int _DNI, int _telefono) {
		nombre = _nombre;
		DNI = _DNI;
		telefono = _telefono;
	};
	void mostrarPersona() {
		std::cout << "Nombre: " << nombre << std::endl;
		std::cout << "DNI: " << DNI << std::endl;
		std::cout << "Telefono: " << telefono << std::endl;
	};
};

class Cliente : public Persona {
public:
	std::string rango;
	int check_in, check_out;
	float pago;
	int num_reserva;

	//Inicializador
	Cliente() {
		nombre = "";
		DNI = 0;
		telefono = 0;
		rango = "";
		check_in = 0;
		check_out = 0;
		num_reserva = 0;
		pago = 0;

	}
	//Constructor
	Cliente(std::string _nombre, int _DNI, int _telefono, std::string _rango, int _check_in, int _check_out, int _num_reserva, float _pago) :Persona(_nombre, _DNI, _telefono) {
		nombre = _nombre;
		DNI = _DNI;
		telefono = _telefono;
		rango = _rango;
		check_in = _check_in;
		check_out = _check_out;
		num_reserva = _num_reserva;
		pago = _pago;

	};
	//Mostrar información del cliente
	void info() {
		std::cout << "Nombre del cliente: " << nombre << std::endl;
		std::cout << "DNI: " << DNI << std::endl;
		std::cout << "Telefono: " << telefono << std::endl;
		std::cout << "Nivel de usuario: " << rango << std::endl;
		std::cout << "Fecha de ingreso: " << check_in << std::endl;
		std::cout << "Fecha de salida: " << check_out << std::endl;
		std::cout << "Numero de habitacion de la reserva " << num_reserva << std::endl;
		std::cout << "Pago por adelantado " << pago << std::endl;

	};
};

class Empleado : public Persona {
public:
	float sueldo;

	std::string area_de_trabajo;
	int hora_entrada;
	int hora_salida;
	//inicializador
	Empleado() {
		nombre = "";
		DNI = 0;
		telefono = 0;
		sueldo = 0;
		area_de_trabajo = "";
		hora_entrada = 0;
		hora_salida = 0;
	}

	//constructor
	Empleado(std::string _nombre, int _DNI, int _telefono, float	_sueldo, std::string _area, int _hora_e, int _hora_s) :Persona(_nombre, _DNI, _telefono) {
		nombre = _nombre;
		DNI = _DNI;
		telefono = _telefono;
		sueldo = _sueldo;
		area_de_trabajo = _area;
		hora_entrada = _hora_e;
		hora_salida = _hora_s;
	};
	void info() {
		std::cout << "Nombre del empleado: " << nombre << std::endl;
		std::cout << "DNI: " << DNI << std::endl;
		std::cout << "Telefono: " << telefono << std::endl;
		std::cout << "Sueldo" << sueldo << std::endl;
		std::cout << "Trabaja en el sector: " << area_de_trabajo << std::endl;
		std::cout << "Horario: Desde " << hora_entrada << " a " << hora_salida << std::endl;
	};
};


class Cuarto {
public:
	int numero;
	int precio;
	int estado;
	int camas;
	std::string tipo;
	class Cliente cliente;
	//Inicializador
	Cuarto() {
		numero = 0;
		precio = 0;
		estado = 0;
		camas = 0;
		tipo = "";
	}
	//Constructor
	Cuarto(int _numero, int _precio, int _estado, int _camas, std::string _tipo) {
		numero = _numero;
		precio = _precio;
		estado = _estado;
		camas = _camas;
		tipo = _tipo;
	}
	//Métodos
	void info() {
		std::cout << "Numero de habitacion: " << numero << std::endl;
		std::cout << "Precio: " << precio << std::endl;
		std::cout << "Numero de camas: " << camas << std::endl;
		std::cout << "Estado: " << estado << std::endl;
		std::cout << "Tipo de habitacion: " << tipo << std::endl;
	}

};
class Cliente Clientes[10];
void CrearCliente() {
	ofstream escribir;
	ifstream verificar;
	bool coincidencia = false;
	verificar.open("clientes.txt", ios::app);
	escribir.open("clientes.txt", ios::app);
	if (escribir.is_open() && verificar.is_open())
	{
		std::string a, b;
		int x, y, z, w, o;
		float p;
		std::cout << "Nombre del cliente: "; std::cin >> a;
		std::cout << "DNI: "; std::cin >> x;
		std::cout << "Telefono: "; std::cin >> y;
		std::cout << "Nivel: "; std::cin >> b;

		std::cout << "Fecha de ingreso: (DDMMAAAA)"; std::cin >> z;
		std::cout << "Fecha de salida: (DDMMAAAA)"; std::cin >> w;
		std::cout << "Numero de habitacion de la reserva "; std::cin >> o;
		std::cout << "Pago por adelantado "; std::cin >> p;


		for (int i = 0; i < 10; i++) {
			if (Clientes[i].nombre == "") {
				Clientes[i] = Cliente(a, x, y,	b, z, w, o, p);
				break;
			}
		}

	}
	else
	{
		std::cout << "se produjo un error";
	}
	escribir.close();
	verificar.close();

}

void Clientesinfo() {
	for (int i = 0; i < 10; i++) {
		if (Clientes[i].nombre != "") {
			std::cout << "Cliente" << i << std::endl;
			Clientes[i].info();
		}
		std::cout << std::endl;
	}
}

class Cuarto Cuartos[10];

void CrearCuarto() {
	std::string tipo;
	int numero;
	int precio;
	int estado;
	int camas;
	std::cout << "Numero de habitacion: "; std::cin >> numero; std::cout << std::endl;
	std::cout << "Precio: "; std::cin >> precio; std::cout << std::endl;
	std::cout << "Numero de camas: "; std::cin >> camas; std::cout << std::endl;
	std::cout << "Estado de habitacion: "; std::cin >> estado; std::cout << std::endl;
	//d = 1;
	std::cout << "Tipo de habitacion: "; std::cin >> tipo; std::cout << std::endl;

	for (int i = 0; i < 10; i++) {
		if (Cuartos[i].estado == 0) {
			Cuartos[i] = Cuarto(numero, precio, estado, camas, tipo);
			break;
		}
	}
}

void MostrarCuarto() {
	for (int i = 0; i < 10; i++) {
		if (Cuartos[i].tipo != "") {
			std::cout << "Cuartos" << i << std::endl;
			Cuartos[i].info();
		}
		std::cout << std::endl;
	}


}
 class Empleado Empleados[10];

 
void CrearEmpleado() {
	std::string a, b; //nombre y area
	int x, y, z, w, o; //dni,cel,hentrada, hsalida
	float s;
	std::cout << "Nombre del empleado: "; std::cin >> a;
	std::cout << "DNI: "; std::cin >> x;
	std::cout << "Telefono: "; std::cin >> y;
	std::cout << "Sueldo:"; std::cin >> s;
	std::cout << "Area de trabajo:"; std::cin >> b;
	std::cout << "Horario: Desde: "; std::cin >> w;
	std::cout << " a "; std::cin >> o; 

	for (int i = 0; i < 10; i++) {
		if (Empleados[i].nombre == "") {
			Empleados[i] = Empleado(a, x, y, s, b, w, o);
			break;
		}
	}
}

void Empleadosinfo()
{
	for (int i = 0; i < 10; i++) {
		if (Empleados[i].nombre != "") {
			std::cout << "Empleados	" << i << std::endl;
			Empleados[i].info();
		}
		std::cout << std::endl;
	}

}

int main() {
	//Bucle principal
	while (true) {
		//Opciones
		std::cout << "BIENVENIDO A LA INTERFAZ DE USUARIO\nIntroduzca el numero de comando que desea ejecutar\n";
		std::cout << "1.- Crear persona\n2.- Mostrar clientes\n3.- Crear cuarto\n4.- Mostrar Cuarto\n5.- Crear empleado\n6.-Mostrar Empleados\n";
		int operacion; std::cin >> operacion;
		switch (operacion) {
		case 1:
			CrearCliente();
			break;
		case 2:
			Clientesinfo();
			break;
		case 3:
			CrearCuarto();
			break;
		case 4:
			MostrarCuarto();
			break;
		case 5:
			CrearEmpleado();
			break;
		case 6:
			Empleadosinfo();
			break;


		default:
			break;
		}
	}
	return 0;
}
